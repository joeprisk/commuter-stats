(window.nunjucksPrecompiled=window.nunjucksPrecompiled||{})["app.html"]={root:function(n,e,t,a,r){var s="";try{r(null,s+='<div class="container animated" data-animation="fadeInRight" data-animation-delay="1000">\n    <div class="row">\n        <div class="col-md-10 col-md-offset-1">\n\n            <div id="profile">\n\n            </div>\n\n            <dl>\n                <dt>Total distance commuting</dt><dd id="distance"><i class="fa fa-spin fa-spinner"></i> </dd>\n                <dt>Total CO2 saved from commuting</dt><dd id="co2"><i class="fa fa-spin fa-spinner"></i> </dd>\n                <dt>total calories burnt commuting</dt><dd id="calories"><i class="fa fa-spin fa-spinner"></i> </dd>\n            </dl>\n\n\n            <section class="tree">\n                <div id="trees"></div>\n                <img src="/assets/tree.png">\n            </section>\n\n        </div>\n    </div>\n</div>\n')}catch(n){r(a.handleError(n,null,null))}}},(window.nunjucksPrecompiled=window.nunjucksPrecompiled||{})["index.html"]={root:function(n,e,t,a,r){var s="";try{r(null,s+='<div class="container animated" data-animation="fadeInRight" data-animation-delay="1000">\n    <div class="row">\n        <div class="col-md-10 col-md-offset-1">\n            <div class="section-header">\n                <h2 class="section-title">Register with CarbonStrava</h2>\x3c!-- END TITLE --\x3e\n                <div class="line-separate line-white line-center 1000"><span></span></div>\n            </div>\n            <div class="slide-content">\n                <p class="color-white onstart">\n                    Powered by Strava to track your gear\'s usage\n                </p>\n                <a href="" id="register" class="external border-button go-slide onstart">Connect with STRAVA</a>\n            </div>\n\n        </div>\n    </div>\n</div>\n\n<script>\n\n    (() => {\n\n        let location = window.location;\n\n\n        hasAuth();\n\n        function hasAuth() {\n\n            // check local storage for auth token...\n            if (localStorage.getItem(\'strava-auth\')) {\n\n                showApp();\n            } else {\n\n                !!location.search ? getCredentials() : setUrl();\n            }\n\n\n            // else do the login stuff\n        }\n\n\n        function getCredentials() {\n\n            let pairs = location.search.substring(1).split("&"),\n                obj = {},\n                pair;\n\n            for (let i in pairs) {\n                if (pairs[i] === "") continue;\n\n                pair = pairs[i].split("=");\n                !!pair[1] && (obj[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]));\n            }\n\n            let xhr = new XMLHttpRequest();\n            xhr.open("PUT", \'https://1qnaxp9rb8.execute-api.eu-west-2.amazonaws.com/Live\', true);\n            xhr.setRequestHeader(\'Content-Type\', \'application/json\');\n            xhr.send(JSON.stringify({\n                code: obj.code\n            }));\n\n            xhr.onreadystatechange = processRequest;\n\n            function processRequest(e) {\n\n                if (xhr.readyState === 4 && xhr.status === 200) {\n                    let response = JSON.parse(xhr.responseText);\n                    console.log(response);\n\n                    localStorage.setItem(\'strava-auth\', response.access_token);\n                    localStorage.setItem(\'strava-profile\', JSON.stringify(response.athlete));\n\n                    showApp();\n\n                }\n            }\n\n        }\n\n        function showApp() {\n\n            Promise.resolve()\n                .then(() => window.loadPage(\'/app\'))\n                .then(() => app());\n        }\n\n        function setUrl() {\n\n            let authUrl = \'https://www.strava.com/oauth/authorize?\';\n\n            let parts = {\n                approval_prompt: \'force\',\n                client_id: \'14427\',\n                redirect_uri: `${window.location.origin}/auth`,\n                response_type: \'code\',\n                scope: \'view_private\',\n            };\n\n            Object.keys(parts).forEach(part => authUrl += `${part}=${parts[part]}&`);\n\n            authUrl = encodeURI(authUrl.replace(/\\&$/, \'\'));\n\n            document.getElementById(\'register\').href = authUrl;\n        }\n\n        function app() {\n\n            console.log(\'run the app...\')\n\n            let athlete = JSON.parse(localStorage.getItem(\'strava-profile\'));\n\n            let calories = 0,\n                co2 = 0,\n                distance = 0;\n\n            let beginningOfYear = new Date();\n\n            beginningOfYear.setFullYear(beginningOfYear.getFullYear(), 0, 1);\n            beginningOfYear.setHours(0, 0, 0);\n\n            console.log(beginningOfYear);\n\n            document.getElementById(\'profile\').innerHTML = `\n            <img src="${athlete.profile}">\n            <h2>${athlete.firstname} ${athlete.lastname} <span>${athlete.city}, ${athlete.state}</span></h2>\n            <p>These stats are for the current year starting ${formatDate(beginningOfYear)}.</p>\n        `;\n\n            Promise.resolve()\n                .then(() => loadActivities(1))\n                .then(() => displayStats());\n\n            function displayStats() {\n\n                    distance = distance * 0.00062137;\n                    co2 = distance * 0.28485;\n\n                    document.getElementById(\'distance\').innerHTML = `${(distance).toFixed(2)} miles`;\n                    document.getElementById(\'co2\').innerHTML = `${(co2).toFixed(2)} kg`;\n                    document.getElementById(\'calories\').innerHTML = `${(calories * 1.11484317115).toFixed(2)} calories`;\n                    document.getElementById(\'trees\').innerHTML = `${(co2 * 0.005511556554622).toFixed(2)} trees`;\n\n            }\n\n            function loadActivities(page) {\n\n                return request(\'GET\', `https://www.strava.com/api/v3/activities?page=${page}&per_page=100`, {}, {\'Authorization\': `Bearer ${localStorage.getItem(\'strava-auth\')}`})\n                    .then(response => {\n\n                        let more = (response.length && new Date(response[response.length - 1].start_date_local) > beginningOfYear);\n\n                        response.forEach(activity => {\n\n                            if (!!activity.commute && new Date(activity.start_date_local) >= beginningOfYear) {\n\n                                calories += activity.kilojoules;\n                                distance += activity.distance;\n                            }\n                        });\n\n                        return !!more ? loadActivities(page + 1) : Promise.resolve();\n\n                    });\n\n\n            }\n\n            function request(method, url, body, headers) {\n\n                body = !!body ? body : {};\n                headers = !!headers ? headers : {};\n\n                return new Promise((resolve, reject) => {\n\n                    let xhr = new XMLHttpRequest();\n                    xhr.open(method, url, true);\n                    xhr.setRequestHeader(\'Content-Type\', \'application/json\');\n\n                    Object.keys(headers).forEach(header => xhr.setRequestHeader(header, headers[header]));\n                    xhr.send(JSON.stringify(body));\n\n                    xhr.onreadystatechange = processRequest;\n\n                    function processRequest(e) {\n\n                        if (xhr.readyState === 4) {\n                            let response = JSON.parse(xhr.responseText);\n\n                            xhr.status === 200 ? resolve(response) : reject(xhr.status);\n\n                        }\n                    }\n                });\n            }\n\n\n        }\n\n        function formatDate(date) {\n            let monthNames = [\n                "January", "February", "March",\n                "April", "May", "June", "July",\n                "August", "September", "October",\n                "November", "December"\n            ];\n\n            let day = date.getDate();\n            let monthIndex = date.getMonth();\n            let year = date.getFullYear();\n\n            return day + \' \' + monthNames[monthIndex] + \' \' + year;\n        }\n\n    })();\n<\/script>')}catch(n){r(a.handleError(n,null,null))}}};